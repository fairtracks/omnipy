# Prefect logging config file.
#
# Any item in this file can be overridden with an environment variable:
#    `PREFECT_LOGGING_[PATH]_[TO]_[KEY]=VALUE`
#
# Templated values can be used to insert values from the Prefect settings at runtime.

version: 1
disable_existing_loggers: False

formatters:
    simple:
        format: "%(asctime)s.%(msecs)03d | %(message)s"
        datefmt: "%H:%M:%S"

    standard:
        format: "%(asctime)s.%(msecs)03d | %(levelname)-7s | %(name)s - %(message)s"
        datefmt: "%H:%M:%S"

    flow_runs:
        format: "%(asctime)s.%(msecs)03d | %(levelname)-7s | Flow run %(flow_run_name)r - %(message)s"
        datefmt: "%H:%M:%S"

    task_runs:
        format: "%(asctime)s.%(msecs)03d | %(levelname)-7s | Task run %(task_run_name)r - %(message)s"
        datefmt: "%H:%M:%S"

    json:
        class: prefect.logging.formatters.JsonFormatter
        format: "default"

# filters:
    # Define any custom filters to drops records containing
    # sensitive information
    # my_filter:
        # class: your_module.FilterClass

handlers:

    # The handlers we define here will output all logs they receive by default
    # but we include the `level` so it can be overridden by environment

    console:
        level: 0
        class: logging.StreamHandler
        formatter: standard

    console_flow_runs:
        level: 0
        class: logging.StreamHandler
        formatter: flow_runs

    console_task_runs:
        level: 0
        class: logging.StreamHandler
        formatter: task_runs

    orion:
        level: 0
        class: prefect.logging.handlers.OrionHandler

loggers:
    prefect:
        level: "${PREFECT_LOGGING_LEVEL}"
#        handlers: [console]
        handlers: []
#        propagate: no
        propagate: yes

    prefect.extra:
        level: "${PREFECT_LOGGING_LEVEL}"
#        handlers: [orion, console]
        handlers: [orion]
#        propagate: no
        propagate: yes

    prefect.flow_runs:
        level: NOTSET
#        handlers: [orion, console_flow_runs]
        handlers: [orion]
#        propagate: no
        propagate: yes

    prefect.task_runs:
        level: NOTSET
#        handlers: [orion, console_task_runs]
        handlers: [orion]
#        propagate: no
        propagate: yes

    prefect.orion:
        level: "${PREFECT_LOGGING_SERVER_LEVEL}"

    uvicorn:
        level: "${PREFECT_LOGGING_SERVER_LEVEL}"
        handlers: [console]
        propagate: no

    fastapi:
        level: "${PREFECT_LOGGING_SERVER_LEVEL}"
        handlers: [console]
        propagate: no

## The root logger: any logger without propagation disabled sends to here as well
#root:
#    # By default, we display warning level logs from any library in the console
#    # to match Python's default behavior while formatting logs nicely
#    level: WARNING
#    handlers: [console]
