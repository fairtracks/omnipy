[project]
name = "omnipy"
version = "0.20.1"
description = "Omnipy is a high level Python library for type-driven data wrangling and scalable workflow orchestration (under development)"
readme = "README.md"
requires-python = ">=3.10,<3.13"
license = { file = "LICENSE" }
authors = [{name="Sveinung Gundersen"}, {name="Joshua Baskaran"}, {name="Federico Bianchini"}, {name="Jeanne Chèneby"}, {name="Ahmed Ghanem"},{name="Pável Vázquez"}]
maintainers = [{name="Sveinung Gundersen"}]
keywords = ["data wrangling", "metadata", "workflows", "etl", "research data", "prefect", "pydantic", "FAIR", "ontologies", "JSON", "tabular", "type-driven", "orchestration", "data models", "universal"]
classifiers = ["Development Status :: 2 - Pre-Alpha", "Framework :: Pydantic", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.10", "Topic :: Software Development :: Libraries"]
packages = [{include = "omnipy", from = "src"}]
dependencies = [
"aiostream (>=0.4.5,<1)",
"inflection (>=0.5.1,<0.6.0)",
"pandas <2.2",
"prefect (>=2.13.2,<3)",
"pytest-asyncio (>=0.20.2,<1)",
"pytest-cases (>=3.6.13,<4)",
"typing-extensions (>=4.12.2,<5)",
"python-slugify (>=8.0.4,<9)",
"isort (>=5.12.0,<6)",
"chardet (>=5.2.0,<6)",
"pathspec (>=0.12.1,<1)",
"devtools (>=0.12.2,<1)",
"objsize (>=0.7.0,<1)",
"humanize (>=4.9.0,<5)",
"pydantic [email] < 2",
"griffe < 1",
"ipython (>=7.34.0,<8)",
"pydantic-core (>=2.24.2,<3)",
"aiohttp (>=3.10.6,<4)",
"aiohttp-retry (>=2.9.0,<3)",
"aiolimiter (>=1.1.0,<2)",
"tabulated (>=0.10.0,<1)"
]

[tool.poetry.group.dev.dependencies]
deepdiff = "^6.2.1"
pytest = "^7.1.0"
pytest-pycharm = "^0.7.0"
types-python-slugify = "^8.0.0.1"
types-requests = "^2.28.11.15"
pandas-stubs = "<2.2"
pre-commit = "^3.8.0"
pytest-mypy-plugins = "^3.1.2"
devtools = "^0.12.2"
mypy = "^1.13.0"
pytest-aiohttp = "^1.0.5"
pyright = "^1.1.389"

[tool.poetry.group.docs.dependencies]
pymdown-extensions = "^10.0.1"
mkdocs = "^1.5.3"
mkdocstrings = {version = ">=0.26.1", extras=["python"]}
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.1"
mkdocs-section-index = "^0.3.8"
mkdocs-material = "^9.4.6"
mdx-truly-sane-lists = "^1.3"

[project.urls]
source = "http://github.com/fairtracks/omnipy"
homepage = "https://fairtracks.net/fair/#fair-07-transformation"
documentation = "http://omnipy.readthedocs.io/"
releasenotes = "https://omnipy.readthedocs.io/en/latest/release_notes/"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.setuptools.package-data]
"omnipy" = ["py.typed"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.yapf]
allow_split_before_dict_value = true
based_on_style = "google"
align_closing_bracket_with_visual_indent = true
blank_line_before_nested_class_or_def = false
column_limit = 100
indent_dictionary_value = true
join_multiple_lines = true
split_all_comma_separated_values = false
split_all_top_level_comma_separated_values = true
split_before_expression_after_opening_paren = true
split_before_bitwise_operator = true
split_before_logical_operator = true
split_before_arithmetic_operator = true

[tool.isort]
profile = "google"
force_single_line = false
multi_line_output = 1
src_paths = ["src/omnipy", "tests"]
line_length = 100

[flows]
checkpointing = true

[tool.mypy]
# Adapted from https://quantlane.com/blog/type-checking-large-codebase/

# General

python_version = "3.10"
mypy_path = "src:tests"

ignore_missing_imports = true
follow_imports = "silent"

# Ensure full coverage
#disallow_untyped_calls = true
#disallow_untyped_defs = true
#disallow_incomplete_defs = true
#disallow_untyped_decorators = true
#check_untyped_defs = true

# Restrict dynamic typing
#disallow_any_generics = true
#disallow_subclassing_any = true
#warn_return_any = true

# Know exactly what you're doing
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
warn_unreachable = false
show_error_codes = true

# Explicit is better than implicit
no_implicit_optional = true

# Others
warn_no_return = false
disable_error_code = ["empty-body"]
#show_column_numbers = true
error_summary = true
verbosity = 0
#no_implicit_reexport = true

#plugins = [
#  "pydantic.mypy"
#]

[[tool.mypy.overrides]]
module = "tests.*"
# pytest decorators are not typed
disallow_untyped_decorators = false

#[[tool.mypy.overrides]]
#module = "firstmodule.*"
#ignore_missing_imports = true
#follow_imports = 'silent'

#[tool.pydantic-mypy]
##init_forbid_extra = true
#init_typed = false
#warn_required_dynamic_aliases = true

[tool.pyright]
reportFunctionMemberAccess = 'warning'
reportUnusedExpression = 'none'

[tool.pytest.ini_options]
addopts = "--tb=native"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
